name: PR

on:
  issue_comment:
    types: [ 'created' ]
  pull_request:
    types: ["opened", "reopened", "synchronize", "ready_for_review"]
    branches: ["**", "main"]
    paths:
      - "**" # all files otherwise excludes wont work
      - "!**/**/*.md" # ignore markdown files
      - "!demo/**" # ignore demos folder
      - "!sample/**" # ignore samples folder
      - "!example/**" # ignore examples folder

jobs:
  trigger-checks:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read
    outputs:
      by-mke3-commit: ${{ steps.path_filter.outputs.mke3_changed == 'true' && (! github.event.pull_request.draft ) }}
      by-cni-commit: ${{ steps.path_filter.outputs.cni_changed == 'true' && (! github.event.pull_request.draft ) }}
      by-comment: ${{ steps.migration_comment_trigger.outputs.triggered == 'true'  || steps.integration_comment_trigger.outputs.triggered == 'true' || steps.conformance_comment_trigger.outputs.triggered == 'true' || steps.upgrade_comment_trigger.outputs.triggered == 'true' || steps.cilium_comment_trigger.outputs.triggered == 'true' || steps.kuberouter_comment_trigger.outputs.triggered == 'true' }}
      migration-comment: ${{ steps.migration_comment_trigger.outputs.triggered == 'true' }}
      integration-comment: ${{ steps.integration_comment_trigger.outputs.triggered == 'true' }}
      conformance-comment: ${{ steps.conformance_comment_trigger.outputs.triggered == 'true' }}
      upgrade-comment: ${{ steps.upgrade_comment_trigger.outputs.triggered == 'true' }}
      cilium-comment: ${{ steps.cilium_comment_trigger.outputs.triggered == 'true' }}
      kuberouter-comment: ${{ steps.kuberouter_comment_trigger.outputs.triggered == 'true' }}
    steps:
      - uses: shanegenschaw/pull-request-comment-trigger@v2.1.0
        id: migration_comment_trigger
        if: ${{ github.event.issue.pull_request }}
        with:
          trigger: '/test-migration'
          reaction: eyes
        env:
          GITHUB_TOKEN: '${{ secrets.PAT_CI_GHAX }}'

      - uses: shanegenschaw/pull-request-comment-trigger@v2.1.0
        id: integration_comment_trigger
        if: ${{ github.event.issue.pull_request }}
        with:
          trigger: '/test-integration'
          reaction: eyes
        env:
          GITHUB_TOKEN: '${{ secrets.PAT_CI_GHAX }}'

      - uses: shanegenschaw/pull-request-comment-trigger@v2.1.0
        id: conformance_comment_trigger
        if: ${{ github.event.issue.pull_request }}
        with:
          trigger: '/test-conformance **'
          reaction: eyes
          allow_arguments: true
        env:
          GITHUB_TOKEN: '${{ secrets.PAT_CI_GHAX }}'
      - uses: shanegenschaw/pull-request-comment-trigger@v2.1.0
        id: upgrade_comment_trigger
        if: ${{ github.event.issue.pull_request }}
        with:
          trigger: '/test-upgrade'
          reaction: eyes
        env:
          GITHUB_TOKEN: '${{ secrets.PAT_CI_GHAX }}'

      - uses: shanegenschaw/pull-request-comment-trigger@v2.1.0
        id: cilium_comment_trigger
        if: ${{ github.event.issue.pull_request }}
        with:
          trigger: '/test-cilium'
          reaction: eyes
        env:
          GITHUB_TOKEN: '${{ secrets.PAT_CI_GHAX }}'

      - uses: shanegenschaw/pull-request-comment-trigger@v2.1.0
        id: kuberouter_comment_trigger
        if: ${{ github.event.issue.pull_request }}
        with:
          trigger: '/test-kuberouter'
          reaction: eyes
        env:
          GITHUB_TOKEN: '${{ secrets.PAT_CI_GHAX }}'

      - uses: dorny/paths-filter@v2
        id: path_filter
        if: ${{ github.event_name == 'pull_request' }}
        with:
          filters: |
            mke3_changed:
              - 'pkg/mke3/**'
              - 'cmd/upgrade.go'
              - 'internal/blueprint/blueprint.go'
              - 'internal/boundless/boundless.go'
            cni_changed:
              - 'internal/cni/**'
              - 'internal/blueprint/net.go'

  setup-vars:
    uses: MirantisContainers/shared-workflows/.github/workflows/vars.yml@v0.0.1
    with:
      env-config-path: .github/development.env # No values are actually used ATM
  vet:
    needs: [trigger-checks]
    if: ${{ github.event_name == 'pull_request' || needs.trigger-checks.outputs.by-comment == 'true' }}
    uses: ./.github/workflows/vet.yml
  static-analysis:
    needs: [trigger-checks]
    if: ${{ github.event_name == 'pull_request' || needs.trigger-checks.outputs.by-comment == 'true' }}
    uses: ./.github/workflows/static-analysis.yml
  unit-test:
    needs: [trigger-checks]
    if: ${{ github.event_name == 'pull_request' || needs.trigger-checks.outputs.by-comment == 'true' }}
    uses: ./.github/workflows/unit.yml
  build:
    needs: [trigger-checks, setup-vars]
    if: ${{ github.event_name == 'pull_request' || needs.trigger-checks.outputs.by-comment == 'true' }}
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      version: ${{ needs.setup-vars.outputs.version }}
      commit: ${{ needs.setup-vars.outputs.commit }}
      date: ${{ needs.setup-vars.outputs.date }}
  integration-by-comment:
    needs: [vet, static-analysis, unit-test, build, trigger-checks]
    if: ${{ needs.trigger-checks.outputs.integration-comment == 'true' }}
    uses: ./.github/workflows/integration.yml
    secrets: inherit
    with:
      checkout_ref: refs/pull/${{ github.event.issue.number }}/head
      cni_provider: "calico"
  integration-calico-by-cni-code-change:
    needs: [ vet, static-analysis, unit-test, build, trigger-checks ]
    if: ${{ needs.trigger-checks.outputs.by-cni-commit == 'true'}}
    uses: ./.github/workflows/integration.yml
    secrets: inherit
    with:
      checkout_ref: ${{ github.ref }}
      cni_provider: "calico"
  integration-cilium-by-cni-code-change:
    needs: [ vet, static-analysis, unit-test, build, trigger-checks ]
    if: ${{ needs.trigger-checks.outputs.by-cni-commit == 'true'}}
    uses: ./.github/workflows/integration.yml
    secrets: inherit
    with:
      checkout_ref: ${{ github.ref }}
      cni_provider: "cilium"
  integration-kuberouter-by-cni-code-change:
    needs: [ vet, static-analysis, unit-test, build, trigger-checks ]
    if: ${{ needs.trigger-checks.outputs.by-cni-commit == 'true'}}
    uses: ./.github/workflows/integration.yml
    secrets: inherit
    with:
      checkout_ref: ${{ github.ref }}
      cni_provider: "kuberouter"
  calico-conformance:
    needs: [ vet, static-analysis, unit-test, build, trigger-checks ]
    if: ${{ needs.trigger-checks.outputs.conformance-comment == 'true' }}
    uses: ./.github/workflows/conformance.yml
    secrets: inherit
    with:
      checkout_ref: ${{ github.ref }}
      cni_provider: "calico"
  cilium-conformance:
    needs: [ vet, static-analysis, unit-test, build, trigger-checks ]
    if: ${{ (needs.trigger-checks.outputs.conformance-comment == 'true') || (needs.trigger-checks.outputs.cilium-comment == 'true') }}
    uses: ./.github/workflows/conformance.yml
    secrets: inherit
    with:
      checkout_ref: ${{ github.ref }}
      cni_provider: "cilium"
  kuberouter-conformance:
    needs: [ vet, static-analysis, unit-test, build, trigger-checks ]
    if: ${{ (needs.trigger-checks.outputs.conformance-comment == 'true') || (needs.trigger-checks.outputs.kuberouter-comment == 'true') }}
    uses: ./.github/workflows/conformance.yml
    secrets: inherit
    with:
      checkout_ref: ${{ github.ref }}
      cni_provider: "kuberouter"
  integration-by-cni-code-change:
    runs-on: ubuntu-latest
    needs: [integration-calico-by-cni-code-change, integration-cilium-by-cni-code-change, integration-kuberouter-by-cni-code-change]
    steps:
    - run: echo "null"
  test-migration-by-comment:
    needs: [vet, static-analysis, unit-test, build, trigger-checks]
    if: ${{ needs.trigger-checks.outputs.migration-comment == 'true' }}
    uses: ./.github/workflows/test-migration.yml
    secrets: inherit
    with:
      checkout_ref: refs/pull/${{ github.event.issue.number }}/head
  test-migration-code-change:
    needs: [ vet, static-analysis, unit-test, build, trigger-checks ]
    if: ${{ needs.trigger-checks.outputs.by-mke3-commit == 'true'}}
    uses: ./.github/workflows/test-migration.yml
    secrets: inherit
    with:
      checkout_ref: ${{ github.ref }}
      platforms: '["ubuntu_22.04"]'
  test-upgrade-by-comment:
    needs: [vet, static-analysis, unit-test, build, trigger-checks]
    if: ${{ needs.trigger-checks.outputs.upgrade-comment == 'true' }}
    uses: ./.github/workflows/test-upgrade.yml
    secrets: inherit
    with:
      checkout_ref: refs/pull/${{ github.event.issue.number }}/head
  test-upgrade-code-change:
    needs: [ vet, static-analysis, unit-test, build, trigger-checks ]
    if: ${{ needs.trigger-checks.outputs.by-mke3-commit == 'true'}}
    uses: ./.github/workflows/test-upgrade.yml
    secrets: inherit
    with:
      checkout_ref: ${{ github.ref }}
      platforms: '["ubuntu_22.04"]'
  test-conformance-by-comment:
    runs-on: ubuntu-latest
    needs: [calico-conformance, cilium-conformance, kuberouter-conformance]
    steps:
    - run: echo "null"
  test-kuberouter-by-comment:
    needs: [kuberouter-conformance, integration-kuberouter-by-cni-code-change]
    runs-on: ubuntu-latest
    steps:
    - run: echo "null"
  test-cilium-by-comment:
    needs: [cilium-conformance, integration-cilium-by-cni-code-change]
    runs-on: ubuntu-latest
    steps:
    - run: echo "null"
  reaction-migration-success:
    needs: [ trigger-checks, test-migration-by-comment ]
    if: ${{ needs.trigger-checks.outputs.migration-comment == 'true' && needs.test-migration-by-comment.result == 'success' }}
    secrets: inherit
    uses: ./.github/workflows/reaction-success.yml
    with:
      pr_number: ${{ github.event.issue.number }}
      node_id: ${{ github.event.comment.node_id }}
  reaction-migration-failure:
    needs: [ trigger-checks, test-migration-by-comment ]
    if: ${{ needs.trigger-checks.outputs.migration-comment == 'true' && needs.test-migration-by-comment.result == 'failure' }}
    secrets: inherit
    uses: ./.github/workflows/reaction-failure.yml
    with:
      pr_number: ${{ github.event.issue.number }}
      node_id: ${{ github.event.comment.node_id }}
  reaction-upgrade-success:
    needs: [ trigger-checks, test-upgrade-by-comment ]
    if: ${{ needs.trigger-checks.outputs.upgrade-comment == 'true' && needs.test-upgrade-by-comment.result == 'success' }}
    secrets: inherit
    uses: ./.github/workflows/reaction-success.yml
    with:
      pr_number: ${{ github.event.issue.number }}
      node_id: ${{ github.event.comment.node_id }}
  reaction-upgrade-failure:
    needs: [ trigger-checks, test-upgrade-by-comment ]
    if: ${{ needs.trigger-checks.outputs.upgrade-comment == 'true' && needs.test-upgrade-by-comment.result == 'failure' }}
    secrets: inherit
    uses: ./.github/workflows/reaction-failure.yml
    with:
      pr_number: ${{ github.event.issue.number }}
      node_id: ${{ github.event.comment.node_id }}
  reaction-integration-success:
    needs: [ trigger-checks, integration-by-comment ]
    if: ${{ needs.trigger-checks.outputs.integration-comment == 'true' && needs.integration.result == 'success' }}
    secrets: inherit
    uses: ./.github/workflows/reaction-success.yml
    with:
      pr_number: ${{ github.event.issue.number }}
      node_id: ${{ github.event.comment.node_id }}
  reaction-integration-failure:
    needs: [ trigger-checks, integration-by-comment ]
    if: ${{ needs.trigger-checks.outputs.integration-comment == 'true' && needs.integration.result == 'failure' }}
    secrets: inherit
    uses: ./.github/workflows/reaction-failure.yml
    with:
      pr_number: ${{ github.event.issue.number }}
      node_id: ${{ github.event.comment.node_id }}
  reaction-conformance-success:
    needs: [ trigger-checks, test-conformance-by-comment ]
    if: ${{ needs.trigger-checks.outputs.conformance-comment == 'true' && needs.test-conformance-by-comment.result == 'success' }}
    secrets: inherit
    uses: ./.github/workflows/reaction-success.yml
    with:
      pr_number: ${{ github.event.issue.number }}
      node_id: ${{ github.event.comment.node_id }}
  reaction-conformance-failure:
    needs: [ trigger-checks, test-conformance-by-comment ]
    if: ${{ needs.trigger-checks.outputs.conformance-comment == 'true' && needs.test-conformance-by-comment.result == 'failure' }}
    secrets: inherit
    uses: ./.github/workflows/reaction-failure.yml
    with:
      pr_number: ${{ github.event.issue.number }}
      node_id: ${{ github.event.comment.node_id }}
  reaction-kuberouter-success:
    needs: [ trigger-checks, test-kuberouter-by-comment ]
    if: ${{ needs.trigger-checks.outputs.kuberouter-comment == 'true' && needs.kuberouter-conformance.result == 'success' && needs.integration-kuberouter-by-cni-code-change.result == 'success' }}
    secrets: inherit
    uses: ./.github/workflows/reaction-success.yml
    with:
      pr_number: ${{ github.event.issue.number }}
      node_id: ${{ github.event.comment.node_id }}
  reaction-kuberouter-failure:
    needs: [ trigger-checks, test-kuberouter-by-comment ]
    if: ${{ needs.trigger-checks.outputs.kuberouter-comment == 'true' && (needs.kuberouter-conformance.result == 'failure' || needs.integration-kuberouter-by-cni-code-change.result == 'failure') }}
    secrets: inherit
    uses: ./.github/workflows/reaction-failure.yml
    with:
      pr_number: ${{ github.event.issue.number }}
      node_id: ${{ github.event.comment.node_id }}
  reaction-cilium-success:
    needs: [ trigger-checks, test-cilium-by-comment ]
    if: ${{ needs.trigger-checks.outputs.cilium-comment == 'true' && needs.cilium-conformance.result == 'success' && needs.integration-cilium-by-cni-code-change.result == 'success' }}
    secrets: inherit
    uses: ./.github/workflows/reaction-success.yml
    with:
      pr_number: ${{ github.event.issue.number }}
      node_id: ${{ github.event.comment.node_id }}
  reaction-cilium-failure:
    needs: [ trigger-checks, test-cilium-by-comment ]
    if: ${{ needs.trigger-checks.outputs.cilium-comment == 'true' && (needs.cilium-conformance.result == 'failure' || needs.integration-cilium-by-cni-code-change.result == 'failure') }}
    secrets: inherit
    uses: ./.github/workflows/reaction-failure.yml
    with:
      pr_number: ${{ github.event.issue.number }}
      node_id: ${{ github.event.comment.node_id }}
  code-coverage-report:
    needs: [trigger-checks, unit-test]
    if: ${{ github.event_name == 'pull_request' || needs.trigger-checks.outputs.by-comment == 'true' }}
    uses: ./.github/workflows/code-coverage.yml
    with:
      artifact_url: ${{ needs.unit-test.outputs.coverage_artifact_url }}
      pr_number: ${{ github.event.pull_request.number }}
    secrets: inherit


